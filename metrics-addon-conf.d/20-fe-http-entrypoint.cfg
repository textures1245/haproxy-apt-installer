# Main HTTP Frontend
frontend http_frontend
    bind *:80

    # Redirect HTTP to HTTPS
    redirect scheme https code 301

# Main HTTPS Frontend
frontend https_frontend
    bind *:443 ssl crt /etc/haproxy/ssl/nginx-selfsigned.pem

    capture request header Host len 32
    log-format "%ci:%cp [%t] %ft %b/%s %Tq/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r [DOMAIN:%[capture.req.hdr(0)]]"

    # Custom log format for better debugging (captures client IP and domain)
    capture request header Host len 32
    capture request header User-Agent len 64
    capture request header X-Forwarded-For len 32

    # Security headers (equivalent to NGINX security settings)
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header X-Content-Type-Options nosniff
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains"

    # ACL to identify heartbeat requests
    acl is_heartbeat path /api/heartbeat # Uncomment ถ้าจะเปิด User session monitoring

    # Hide server tokens (equivalent to server_tokens off)
    http-response del-header Server

    # Request tracking for metrics (store domain for Lua script access)
    http-request set-var(txn.domain) req.hdr(Host) # Uncomment ถ้าจะเปิด User session monitoring

    # Set a variable if the request is a heartbeat
    http-request set-var(txn.is_heartbeat) int(1) if is_heartbeat # Uncomment ถ้าจะเปิด User session monitoring

    # UUID-based Session Tracking
    # 1. Capture request cookie 'SESSION_ID' into a transaction variable.
    http-request set-var(txn.session_id) req.cook(SESSION_ID) # Uncomment ถ้าจะเปิด User session monitoring

    # 2. If no cookie exists, generate a new UUID (using a different condition check).
    http-request set-var(txn.session_id) uuid() unless { req.cook(SESSION_ID) -m found }# Uncomment ถ้าจะเปิด User session monitoring
    
    # 3. Set the 'SESSION_ID' cookie in the response with appropriate flags.
    http-response add-header Set-Cookie "SESSION_ID=%[var(txn.session_id)]; path=/; secure; httponly; Max-Age=10" # Uncomment ถ้าจะเปิด User session monitoring
    
    # Debug: Add headers to show client IP and domain
    http-request set-header X-Debug-Client-IP %[src]
    http-request set-header X-Debug-Domain %[req.hdr(Host)]
    
    use_backend awesome.one.th-api if { hdr(host) -i awesome.one.th } { path_beg /api/v1 }
    use_backend awesome.one.th if { hdr(host) -i awesome.one.th }

    # Default backend 
    # default_backend default_backend # Uncomment ถ้าจะเปิดใช้ default_backend
